{"ast":null,"code":"// here we need to specify what all the props we will get from the parent component and we will mention\n//as shown in the props obj arr\nexport default {\n  name: \"GreetVue\",\n  props: [\"name\"],\n  city: \"\",\n  formValues: {\n    username: \"\",\n    email: \"\"\n  },\n  methods: {\n    addnewcity() {\n      this.$store.dispatch(\"add_cities\", this.city);\n    }\n  }\n};","map":{"version":3,"names":["name","props","city","formValues","username","email","methods","addnewcity","$store","dispatch"],"sources":["/home/zaheerabbas/Desktop/Projects/VueJs/hello-world/vuejs-starter/src/components/Greet.vue"],"sourcesContent":["<template>\n  <h2>the greet component</h2>\n  <h1>Welcome {{ name }}</h1>\n\n  <!-- from the store -->\n  <p>the data from the state is --</p>\n  <p>\n    Firstname - {{ $store.state.firstname }}, Lastname -\n    {{ $store.state.lastname }}\n  </p>\n  <!-- full name using the getter can be shown below -->\n  <p>the data from the getter is -</p>\n  <p>fullname - {{ $store.getters.fullname }}</p>\n\n  <!-- add to favs button  -->\n  <!-- <p>add to favs button</p> -->\n  <!-- <button @click=\"$store.dispatch('addtofav', 'test')\">Add to favs</button> -->\n\n  <!-- to get the count value from the store -->\n  <p>count value from the store</p>\n  <p>{{ $store.state.counts }}</p>\n  <button @click=\"$store.dispatch('change_counts')\">increase count</button>\n\n  <p>showing the list of the cities from the store array -</p>\n  {{ $store.state.cities }}\n  <p v-for=\"city in $store.state.cities\" :key=\"city\">{{ city }}</p>\n  <input type=\"text\" placeholder=\"add new city\" v-model=\"city\" />\n  <button @click=\"addnewcity\">Add New City</button>\n\n  <!-- the user data from the form  -->\n  <form>\n    <label for=\"\">username</label>\n    <input\n      type=\"text\"\n      name=\"username\"\n      id=\"username\"\n      v-model=\"formValue.username\"\n    />\n\n    <label for=\"\">email</label>\n    <input type=\"text\" name=\"email\" id=\"email\" v-model=\"formValue.email\" />\n  </form>\n</template>\n\n\n<script>\n// here we need to specify what all the props we will get from the parent component and we will mention\n//as shown in the props obj arr\nexport default {\n  name: \"GreetVue\",\n  props: [\"name\"],\n  city: \"\",\n  formValues: {\n    username: \"\",\n    email: \"\",\n  },\n\n  methods: {\n    addnewcity() {\n      this.$store.dispatch(\"add_cities\", this.city);\n    },\n  },\n};\n</script>"],"mappings":"AA8CA;AACA;AACA,eAAe;EACbA,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE,CAAC,MAAM,CAAC;EACfC,IAAI,EAAE,EAAE;EACRC,UAAU,EAAE;IACVC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACT,CAAC;EAEDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,YAAY,EAAE,IAAI,CAACP,IAAI,CAAC;IAC/C;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}