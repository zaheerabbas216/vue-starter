{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, vShow as _vShow, withDirectives as _withDirectives, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = [\"textContent\"];\nconst _hoisted_2 = [\"innerHTML\"];\nconst _hoisted_3 = [\"id\"];\nconst _hoisted_4 = [\"disabled\"];\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"underlined\"\n}, \"underlined text\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: /*#__PURE__*/_normalizeClass(['new', 'success'])\n}, \" New Data with the multiple array of styles (classes in the array) \", -1 /* HOISTED */);\nconst _hoisted_7 = {\n  key: 0,\n  class: \"notGreaterThanZero\"\n};\nconst _hoisted_8 = {\n  key: 1,\n  class: \"greaterThanZero\"\n};\nconst _hoisted_9 = {\n  key: 2,\n  class: \"notGreaterThanZero\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"h5\", null, \"Hello \" + _toDisplayString(_ctx.name), 1 /* TEXT */), _createCommentVNode(\" v-text directive \"), _createElementVNode(\"p\", {\n    textContent: _toDisplayString(_ctx.village)\n  }, null, 8 /* PROPS */, _hoisted_1), _createCommentVNode(\" v-html directive \"), _createElementVNode(\"p\", {\n    innerHTML: _ctx.mentor\n  }, null, 8 /* PROPS */, _hoisted_2), _createCommentVNode(\" using the atrributes like id,class etc.. \"), _createElementVNode(\"p\", {\n    id: _ctx.height\n  }, _toDisplayString(_ctx.height), 9 /* TEXT, PROPS */, _hoisted_3), _createCommentVNode(\" other binding example using the boolean  \"), _createElementVNode(\"button\", {\n    disabled: _ctx.isButtonDisabled\n  }, \"Click Me!\", 8 /* PROPS */, _hoisted_4), _createCommentVNode(\" using the class (static)\"), _hoisted_5, _createCommentVNode(\" we can also add the dynamic styles by using the  \"), _createElementVNode(\"p\", {\n    class: _normalizeClass(_ctx.isSuccess)\n  }, _toDisplayString(_ctx.isSuccess), 3 /* TEXT, CLASS */), _createCommentVNode(\" to dynamically bind the data using the ternary operator in the v-bind directive \"), _createElementVNode(\"p\", {\n    class: _normalizeClass(_ctx.isTrue ? 'success' : 'unsuccess')\n  }, \"is its \" + _toDisplayString(_ctx.isTrue), 3 /* TEXT, CLASS */), _createCommentVNode(\" we can also use the array and the object approach to bind the multiple classes to the tag  \"), _hoisted_6, _createCommentVNode(\" we can also conditional render the aray of the classes  \"), _createElementVNode(\"p\", {\n    class: _normalizeClass([_ctx.isTrue ? 'success' : 'unsuccess', _ctx.isNew && 'new'])\n  }, \" Conditional rendering of the v bind classes within the array \", 2 /* CLASS */), _createCommentVNode(\" we can also bind the conditional data using the object  \"), _createElementVNode(\"p\", {\n    class: _normalizeClass({\n      new: _ctx.isNew,\n      isSuccess: 'success'\n    })\n  }, \" Binding the data using the object in the bind class \", 2 /* CLASS */), _createCommentVNode(\" we can also add the inline styles first we need to declare the color in the js and then use \\n  the color in the bind:style directive \"), _createElementVNode(\"p\", {\n    style: _normalizeStyle({\n      color: _ctx.highlightColor\n    })\n  }, \" Highlighted Text \", 4 /* STYLE */), _createCommentVNode(\" we can also bind the style objects to the directive as shwon , first you need to create an obejct\\n  with the styles in the js and then you need to use it in the template as shown in the example \"), _createElementVNode(\"p\", {\n    style: _normalizeStyle(_ctx.succcessStyled)\n  }, \" Success styled with the object in the inline \", 4 /* STYLE */), _createCommentVNode(\" instead of using the v-bind everywhere we can also use the :attribute same as the v-bind:attribute \"), _createCommentVNode(\" //! conditional rendering  \"), _createCommentVNode(\" v-if \"), _ctx.number === 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_7, \" Not greater than \" + _toDisplayString(_ctx.number), 1 /* TEXT */)) : _ctx.number > 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_8, \" Number is a positive number \")) : (_openBlock(), _createElementBlock(\"p\", _hoisted_9, \" Not a number/negative number \" + _toDisplayString(_ctx.number), 1 /* TEXT */)), _createCommentVNode(\" we can show or hide the ele uisng the v-show directive \"), _createCommentVNode(\" if the condition for the vhsow is false then the content wont show beacuse the display is none for this \"), _withDirectives(_createElementVNode(\"p\", null, \"v-show directive\", 512 /* NEED_PATCH */), [[_vShow, _ctx.vShowDir]]), _createCommentVNode(\" listing the data from the array using the v-for directive \")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","_normalizeClass","_toDisplayString","_ctx","name","_createCommentVNode","village","innerHTML","mentor","_hoisted_2","id","height","_hoisted_3","disabled","isButtonDisabled","_hoisted_4","_hoisted_5","isSuccess","isTrue","_hoisted_6","isNew","style","_normalizeStyle","highlightColor","succcessStyled","number","_createElementBlock","_hoisted_7","_hoisted_8","_hoisted_9","vShowDir"],"sources":["/home/zaheerabbas/Desktop/Projects/VueJs/hello-world/src/App.vue"],"sourcesContent":["<template>\n  <h5>Hello {{ name }}</h5>\n\n  <!-- v-text directive -->\n  <p v-text=\"village\"></p>\n\n  <!-- v-html directive -->\n  <p v-html=\"mentor\"></p>\n\n  <!-- using the atrributes like id,class etc.. -->\n  <p v-bind:id=\"height\">{{ height }}</p>\n  <!-- other binding example using the boolean  -->\n\n  <button v-bind:disabled=\"isButtonDisabled\">Click Me!</button>\n\n  <!-- using the class (static)-->\n  <p class=\"underlined\">underlined text</p>\n\n  <!-- we can also add the dynamic styles by using the  -->\n  <p v-bind:class=\"isSuccess\">{{ isSuccess }}</p>\n  <!-- to dynamically bind the data using the ternary operator in the v-bind directive -->\n  <p :class=\"isTrue ? 'success' : 'unsuccess'\">is its {{ isTrue }}</p>\n\n  <!-- we can also use the array and the object approach to bind the multiple classes to the tag  -->\n  <p :class=\"['new', 'success']\">\n    New Data with the multiple array of styles (classes in the array)\n  </p>\n\n  <!-- we can also conditional render the aray of the classes  -->\n\n  <p :class=\"[isTrue ? 'success' : 'unsuccess', isNew && 'new']\">\n    Conditional rendering of the v bind classes within the array\n  </p>\n\n  <!-- we can also bind the conditional data using the object  -->\n  <p\n    v-bind:class=\"{\n      new: isNew,\n      isSuccess: 'success',\n    }\"\n  >\n    Binding the data using the object in the bind class\n  </p>\n\n  <!-- we can also add the inline styles first we need to declare the color in the js and then use \n  the color in the bind:style directive -->\n\n  <p\n    v-bind:style=\"{\n      color: highlightColor,\n    }\"\n  >\n    Highlighted Text\n  </p>\n\n  <!-- we can also bind the style objects to the directive as shwon , first you need to create an obejct\n  with the styles in the js and then you need to use it in the template as shown in the example -->\n  <p v-bind:style=\"succcessStyled\">\n    Success styled with the object in the inline\n  </p>\n\n  <!-- instead of using the v-bind everywhere we can also use the :attribute same as the v-bind:attribute -->\n\n  <!-- //! conditional rendering  -->\n  <!-- v-if -->\n  <p class=\"notGreaterThanZero\" v-if=\"number === 0\">\n    Not greater than {{ number }}\n  </p>\n\n  <p class=\"greaterThanZero\" v-else-if=\"number > 0\">\n    Number is a positive number\n  </p>\n\n  <p class=\"notGreaterThanZero\" v-else>\n    Not a number/negative number {{ number }}\n  </p>\n\n  <!-- we can show or hide the ele uisng the v-show directive -->\n  <!-- if the condition for the vhsow is false then the content wont show beacuse the display is none for this -->\n  <p v-show=\"vShowDir\">v-show directive</p>\n\n  <!-- listing the data from the array using the v-for directive -->\n</template>\n\n<script>  \nexport default {\n  name: \"App\",\n  data() {\n    return {\n      name: \"Naruto\",\n      village: \"Leaf\",\n      mentor: \"<b>Jiraya</b>\",\n      height: \"5.3\",\n      isButtonDisabled: false,\n      isSuccess: \"unsuccess\",\n      isTrue: true,\n      isNew: true,\n      highlightColor: \"orange\",\n      succcessStyled: {\n        color: \"green\",\n        border: \"1px solid green\",\n        padding: \"10px\",\n      },\n      number: -2,\n      vShowDir: true,\n      arrNumdata = [\"batman\", \"superman\", \"flash\"]\n    };\n  },\n};\n</script>\n\n<style>\n.underlined {\n  text-decoration: underline;\n}\n\n.success {\n  color: green;\n}\n.unsuccess {\n  color: red;\n}\n\n.new {\n  font-style: italic;\n  font-weight: 800;\n}\n\n.greaterThanZero {\n  color: green;\n}\n\n.notGreaterThanZero {\n  color: red;\n}\n</style>\n"],"mappings":";;;;;gCAgBEA,mBAAA,CAAyC;EAAtCC,KAAK,EAAC;AAAY,GAAC,iBAAe;gCAQrCD,mBAAA,CAEI;EAFAC,KAAK,eAAAC,eAAA,CAAE,kBAAkB;GAAE,qEAE/B;;;EAuCGD,KAAK,EAAC;;;;EAINA,KAAK,EAAC;;;;EAINA,KAAK,EAAC;;;6DAxETD,mBAAA,CAAyB,YAArB,QAAM,GAAAG,gBAAA,CAAGC,IAAA,CAAAC,IAAI,kBAEjBC,mBAAA,sBAAyB,EACzBN,mBAAA,CAAwB;iBAArBG,gBAAA,CAAQC,IAAQ,CAAAG,OAAD;uCAElBD,mBAAA,sBAAyB,EACzBN,mBAAA,CAAuB;IAApBQ,SAAe,EAAPJ,IAAA,CAAAK;EAAM,wBAAAC,UAAA,GAEjBJ,mBAAA,8CAAiD,EACjDN,mBAAA,CAAsC;IAA5BW,EAAE,EAAEP,IAAA,CAAAQ;EAAM,GAAAT,gBAAA,CAAKC,IAAA,CAAAQ,MAAM,wBAAAC,UAAA,GAC/BP,mBAAA,8CAAiD,EAEjDN,mBAAA,CAA6D;IAA9Cc,QAAQ,EAAEV,IAAA,CAAAW;EAAgB,GAAE,WAAS,iBAAAC,UAAA,GAEpDV,mBAAA,6BAAgC,EAChCW,UAAyC,EAEzCX,mBAAA,sDAAyD,EACzDN,mBAAA,CAA+C;IAArCC,KAAK,EAAAC,eAAA,CAAEE,IAAA,CAAAc,SAAS;sBAAKd,IAAA,CAAAc,SAAS,yBACxCZ,mBAAA,qFAAwF,EACxFN,mBAAA,CAAoE;IAAhEC,KAAK,EAAAC,eAAA,CAAEE,IAAA,CAAAe,MAAM;KAA4B,SAAO,GAAAhB,gBAAA,CAAGC,IAAA,CAAAe,MAAM,yBAE7Db,mBAAA,gGAAmG,EACnGc,UAEI,EAEJd,mBAAA,6DAAgE,EAEhEN,mBAAA,CAEI;IAFAC,KAAK,EAAAC,eAAA,EAAGE,IAAA,CAAAe,MAAM,4BAA4Bf,IAAA,CAAAiB,KAAK;KAAY,gEAE/D,kBAEAf,mBAAA,6DAAgE,EAChEN,mBAAA,CAOI;IANKC,KAAK,EAAAC,eAAA;WAAeE,IAAA,CAAAiB,KAAK;;;KAIjC,uDAED,kBAEAf,mBAAA,2IACyC,EAEzCN,mBAAA,CAMI;IALKsB,KAAK,EAAAC,eAAA;aAAiBnB,IAAA,CAAAoB;;KAG9B,oBAED,kBAEAlB,mBAAA,wMACiG,EACjGN,mBAAA,CAEI;IAFMsB,KAAK,EAAAC,eAAA,CAAEnB,IAAA,CAAAqB,cAAc;KAAE,gDAEjC,kBAEAnB,mBAAA,wGAA2G,EAE3GA,mBAAA,gCAAmC,EACnCA,mBAAA,UAAa,EACuBF,IAAA,CAAAsB,MAAM,U,cAA1CC,mBAAA,CAEI,KAFJC,UAEI,EAF8C,oBAC/B,GAAAzB,gBAAA,CAAGC,IAAA,CAAAsB,MAAM,oBAGUtB,IAAA,CAAAsB,MAAM,Q,cAA5CC,mBAAA,CAEI,KAFJE,UAEI,EAF8C,+BAElD,M,cAEAF,mBAAA,CAEI,KAFJG,UAEI,EAFiC,gCACN,GAAA3B,gBAAA,CAAGC,IAAA,CAAAsB,MAAM,mBAGxCpB,mBAAA,4DAA+D,EAC/DA,mBAAA,6GAAgH,E,gBAChHN,mBAAA,CAAyC,WAApB,kBAAgB,0B,SAA1BI,IAAA,CAAA2B,QAAQ,E,GAEnBzB,mBAAA,+DAAkE,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}