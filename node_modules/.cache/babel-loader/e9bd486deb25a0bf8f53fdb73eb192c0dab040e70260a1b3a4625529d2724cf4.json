{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, vShow as _vShow, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = [\"textContent\"];\nconst _hoisted_2 = [\"innerHTML\"];\nconst _hoisted_3 = [\"id\"];\nconst _hoisted_4 = [\"disabled\"];\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"underlined\"\n}, \"underlined text\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: /*#__PURE__*/_normalizeClass(['new', 'success'])\n}, \" New Data with the multiple array of styles (classes in the array) \", -1 /* HOISTED */);\nconst _hoisted_7 = {\n  key: 0,\n  class: \"notGreaterThanZero\"\n};\nconst _hoisted_8 = {\n  key: 1,\n  class: \"greaterThanZero\"\n};\nconst _hoisted_9 = {\n  key: 2,\n  class: \"notGreaterThanZero\"\n};\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"superhero data\", -1 /* HOISTED */);\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Counter in Vue.js\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"h5\", null, \"Hello \" + _toDisplayString($data.name), 1 /* TEXT */), _createCommentVNode(\" v-text directive \"), _createElementVNode(\"p\", {\n    textContent: _toDisplayString($data.village)\n  }, null, 8 /* PROPS */, _hoisted_1), _createCommentVNode(\" v-html directive \"), _createElementVNode(\"p\", {\n    innerHTML: $data.mentor\n  }, null, 8 /* PROPS */, _hoisted_2), _createCommentVNode(\" using the atrributes like id,class etc.. \"), _createElementVNode(\"p\", {\n    id: $data.height\n  }, _toDisplayString($data.height), 9 /* TEXT, PROPS */, _hoisted_3), _createCommentVNode(\" other binding example using the boolean  \"), _createElementVNode(\"button\", {\n    disabled: $data.isButtonDisabled\n  }, \"Click Me!\", 8 /* PROPS */, _hoisted_4), _createCommentVNode(\" using the class (static)\"), _hoisted_5, _createCommentVNode(\" we can also add the dynamic styles by using the  \"), _createElementVNode(\"p\", {\n    class: _normalizeClass($data.isSuccess)\n  }, _toDisplayString($data.isSuccess), 3 /* TEXT, CLASS */), _createCommentVNode(\" to dynamically bind the data using the ternary operator in the v-bind directive \"), _createElementVNode(\"p\", {\n    class: _normalizeClass($data.isTrue ? 'success' : 'unsuccess')\n  }, \"is its \" + _toDisplayString($data.isTrue), 3 /* TEXT, CLASS */), _createCommentVNode(\" we can also use the array and the object approach to bind the multiple classes to the tag  \"), _hoisted_6, _createCommentVNode(\" we can also conditional render the aray of the classes  \"), _createElementVNode(\"p\", {\n    class: _normalizeClass([$data.isTrue ? 'success' : 'unsuccess', $data.isNew && 'new'])\n  }, \" Conditional rendering of the v bind classes within the array \", 2 /* CLASS */), _createCommentVNode(\" we can also bind the conditional data using the object  \"), _createElementVNode(\"p\", {\n    class: _normalizeClass({\n      new: $data.isNew,\n      isSuccess: 'success'\n    })\n  }, \" Binding the data using the object in the bind class \", 2 /* CLASS */), _createCommentVNode(\" we can also add the inline styles first we need to declare the color in the js and then use \\n  the color in the bind:style directive \"), _createElementVNode(\"p\", {\n    style: _normalizeStyle({\n      color: $data.highlightColor\n    })\n  }, \" Highlighted Text \", 4 /* STYLE */), _createCommentVNode(\" we can also bind the style objects to the directive as shwon , first you need to create an obejct\\n  with the styles in the js and then you need to use it in the template as shown in the example \"), _createElementVNode(\"p\", {\n    style: _normalizeStyle($data.succcessStyled)\n  }, \" Success styled with the object in the inline \", 4 /* STYLE */), _createCommentVNode(\" instead of using the v-bind everywhere we can also use the :attribute same as the v-bind:attribute \"), _createCommentVNode(\" //! conditional rendering  \"), _createCommentVNode(\" v-if \"), $data.number === 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_7, \" Not greater than \" + _toDisplayString($data.number), 1 /* TEXT */)) : $data.number > 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_8, \" Number is a positive number \")) : (_openBlock(), _createElementBlock(\"p\", _hoisted_9, \" Not a number/negative number \" + _toDisplayString($data.number), 1 /* TEXT */)), _createCommentVNode(\" we can show or hide the ele uisng the v-show directive \"), _createCommentVNode(\" if the condition for the vhsow is false then the content wont show beacuse the display is none for this \"), _withDirectives(_createElementVNode(\"p\", null, \"v-show directive\", 512 /* NEED_PATCH */), [[_vShow, $data.vShowDir]]), _createCommentVNode(\" listing the data from the array using the v-for directive \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.arrNumdata, (superhero, index) => {\n    return _openBlock(), _createElementBlock(\"p\", {\n      key: index\n    }, _toDisplayString(index) + _toDisplayString(superhero), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)), _hoisted_10, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.superheroDataArr, hero => {\n    return _openBlock(), _createElementBlock(\"p\", {\n      key: hero\n    }, _toDisplayString(hero?.name) + \" alias is \" + _toDisplayString(hero?.alias), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" conditional rendering using the vfor and vif  \"), _createCommentVNode(\" only the show the data in the array which contains the batman \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.superheroDataArr, supe => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: supe\n    }, [supe.name === 'batman' ? (_openBlock(), _createElementBlock(\"p\", {\n      key: 0,\n      style: _normalizeStyle({\n        color: $data.highlightColor,\n        fontSize: $data.fontSizehighlight\n      })\n    }, _toDisplayString(supe?.name), 5 /* TEXT, STYLE */)) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" //!even we need to use the vfor to show the data from the object  \"), _createCommentVNode(\" methods in in vue \"), _createCommentVNode(\" we can create our own methods, we can also declare a variable in the data method and can use in \\nour methods as well  \"), _createElementVNode(\"p\", null, \"the multiplier for provided is \" + _toDisplayString($options.multiplier(2)), 1 /* TEXT */), _createCommentVNode(\" on click event in the vue to change the name \"), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $data.name = 'Batman')\n  }, \"Change name to \" + _toDisplayString($data.name), 1 /* TEXT */), _createCommentVNode(\" the counter example in vue \"), _hoisted_11, _createElementVNode(\"h3\", null, _toDisplayString($data.countvalue), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.increment())\n  }, \"INC\"), _createCommentVNode(\" //! to bind the events in the vue instead of using the v-on every time we can also use the @click \"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => $options.decrement())\n  }, \"DEC\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","_normalizeClass","_toDisplayString","$data","name","_createCommentVNode","village","innerHTML","mentor","_hoisted_2","id","height","_hoisted_3","disabled","isButtonDisabled","_hoisted_4","_hoisted_5","isSuccess","isTrue","_hoisted_6","isNew","style","_normalizeStyle","highlightColor","succcessStyled","number","_createElementBlock","_hoisted_7","_hoisted_8","_hoisted_9","vShowDir","_Fragment","_renderList","arrNumdata","superhero","index","key","_hoisted_10","superheroDataArr","hero","alias","supe","fontSizehighlight","$options","multiplier","onClick","_cache","$event","_hoisted_11","countvalue","increment","decrement"],"sources":["/home/zaheerabbas/Desktop/Projects/VueJs/hello-world/src/App.vue"],"sourcesContent":["<template>\n  <h5>Hello {{ name }}</h5>\n\n  <!-- v-text directive -->\n  <p v-text=\"village\"></p>\n\n  <!-- v-html directive -->\n  <p v-html=\"mentor\"></p>\n\n  <!-- using the atrributes like id,class etc.. -->\n  <p v-bind:id=\"height\">{{ height }}</p>\n  <!-- other binding example using the boolean  -->\n\n  <button v-bind:disabled=\"isButtonDisabled\">Click Me!</button>\n\n  <!-- using the class (static)-->\n  <p class=\"underlined\">underlined text</p>\n\n  <!-- we can also add the dynamic styles by using the  -->\n  <p v-bind:class=\"isSuccess\">{{ isSuccess }}</p>\n  <!-- to dynamically bind the data using the ternary operator in the v-bind directive -->\n  <p :class=\"isTrue ? 'success' : 'unsuccess'\">is its {{ isTrue }}</p>\n\n  <!-- we can also use the array and the object approach to bind the multiple classes to the tag  -->\n  <p :class=\"['new', 'success']\">\n    New Data with the multiple array of styles (classes in the array)\n  </p>\n\n  <!-- we can also conditional render the aray of the classes  -->\n\n  <p :class=\"[isTrue ? 'success' : 'unsuccess', isNew && 'new']\">\n    Conditional rendering of the v bind classes within the array\n  </p>\n\n  <!-- we can also bind the conditional data using the object  -->\n  <p\n    v-bind:class=\"{\n      new: isNew,\n      isSuccess: 'success',\n    }\"\n  >\n    Binding the data using the object in the bind class\n  </p>\n\n  <!-- we can also add the inline styles first we need to declare the color in the js and then use \n  the color in the bind:style directive -->\n\n  <p\n    v-bind:style=\"{\n      color: highlightColor,\n    }\"\n  >\n    Highlighted Text\n  </p>\n\n  <!-- we can also bind the style objects to the directive as shwon , first you need to create an obejct\n  with the styles in the js and then you need to use it in the template as shown in the example -->\n  <p v-bind:style=\"succcessStyled\">\n    Success styled with the object in the inline\n  </p>\n\n  <!-- instead of using the v-bind everywhere we can also use the :attribute same as the v-bind:attribute -->\n\n  <!-- //! conditional rendering  -->\n  <!-- v-if -->\n  <p class=\"notGreaterThanZero\" v-if=\"number === 0\">\n    Not greater than {{ number }}\n  </p>\n\n  <p class=\"greaterThanZero\" v-else-if=\"number > 0\">\n    Number is a positive number\n  </p>\n\n  <p class=\"notGreaterThanZero\" v-else>\n    Not a number/negative number {{ number }}\n  </p>\n\n  <!-- we can show or hide the ele uisng the v-show directive -->\n  <!-- if the condition for the vhsow is false then the content wont show beacuse the display is none for this -->\n  <p v-show=\"vShowDir\">v-show directive</p>\n\n  <!-- listing the data from the array using the v-for directive -->\n  <p v-for=\"(superhero, index) in arrNumdata\" :key=\"index\">\n    {{ index }}{{ superhero }}\n  </p>\n\n  <h4>superhero data</h4>\n  <p v-for=\"hero in superheroDataArr\" :key=\"hero\">\n    {{ hero?.name }} alias is {{ hero?.alias }}\n  </p>\n\n  <!-- conditional rendering using the vfor and vif  -->\n  <!-- only the show the data in the array which contains the batman -->\n  <template v-for=\"supe in superheroDataArr\" :key=\"supe\">\n    <p\n      v-bind:style=\"{\n        color: highlightColor,\n        fontSize: fontSizehighlight,\n      }\"\n      v-if=\"supe.name === 'batman'\"\n    >\n      {{ supe?.name }}\n    </p>\n  </template>\n\n  <!-- //!even we need to use the vfor to show the data from the object  -->\n\n  <!-- methods in in vue -->\n\n  <!-- we can create our own methods, we can also declare a variable in the data method and can use in \nour methods as well  -->\n\n  <p>the multiplier for provided is {{ multiplier(2) }}</p>\n\n  <!-- on click event in the vue to change the name -->\n  <button v-on:click=\"name = 'Batman'\">Change name to {{ name }}</button>\n\n  <!-- the counter example in vue -->\n\n  <h2>Counter in Vue.js</h2>\n  <h3>{{ countvalue }}</h3>\n  <button v-on:click=\"increment()\">INC</button>\n  <!-- //! to bind the events in the vue instead of using the v-on every time we can also use the @click -->\n  <button @click=\"decrement()\">DEC</button>\n</template>\n\n<script>\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      formValues: {\n        name: \"\",\n        age: \"\",\n      },\n      basemultiplier: 23,\n      countvalue: 0,\n      name: \"Naruto\",\n      village: \"Leaf\",\n      mentor: \"<b>Jiraya</b>\",\n      height: \"5.3\",\n      isButtonDisabled: false,\n      isSuccess: \"unsuccess\",\n      isTrue: true,\n      isNew: true,\n      highlightColor: \"orange\",\n      fontSizehighlight: \"20px\",\n      succcessStyled: {\n        color: \"green\",\n        border: \"1px solid green\",\n        padding: \"10px\",\n      },\n      number: -2,\n      vShowDir: true,\n      arrNumdata: [\"batman\", \"superman\", \"flash\"],\n      superheroDataArr: [\n        { name: \"batman\", alias: \"bruce\" },\n        { name: \"superman\", alias: \"clark\" },\n        { name: \"flash\", alias: \"barry\" },\n      ],\n    };\n  },\n\n  methods: {\n    multiplier(number) {\n      return number * this.basemultiplier;\n    },\n    increment() {\n      return (this.countvalue += 1);\n    },\n    decrement() {\n      return (this.countvalue -= 1);\n    },\n  },\n};\n</script>\n\n<style>\n.underlined {\n  text-decoration: underline;\n}\n\n.success {\n  color: green;\n}\n.unsuccess {\n  color: red;\n}\n\n.new {\n  font-style: italic;\n  font-weight: 800;\n}\n\n.greaterThanZero {\n  color: green;\n}\n\n.notGreaterThanZero {\n  color: red;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}