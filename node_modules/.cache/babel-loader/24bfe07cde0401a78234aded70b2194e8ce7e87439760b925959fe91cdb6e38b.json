{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"home\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createCommentVNode(\" we also can pass the props to the component same as the react js \"), _createCommentVNode(\" <GreetVue name=\\\"bruce\\\" />\\n  <SuperherosVue name=\\\"Bruce\\\" superheroname=\\\"batman\\\" /> \")], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_hoisted_1","_createCommentVNode"],"sources":["/home/zaheerabbas/Desktop/Projects/VueJs/hello-world/vuejs-starter/src/App.vue"],"sourcesContent":["<template>\n  <h2>home</h2>\n  <!-- we also can pass the props to the component same as the react js -->\n  <!-- <GreetVue name=\"bruce\" />\n  <SuperherosVue name=\"Bruce\" superheroname=\"batman\" /> -->\n</template>\n\n<script>\nexport default {\n  name: \"App\",\n\n  data() {\n    return {\n      formValues: {\n        name: \"\",\n        age: \"\",\n        isAvailable: \"no\",\n        skills: [],\n      },\n      firstname: \"brue\",\n      lastname: \"wayne\",\n      volume: 0,\n      basemultiplier: 23,\n      countvalue: 0,\n      name: \"Naruto\",\n      village: \"Leaf\",\n      mentor: \"<b>Jiraya</b>\",\n      height: \"5.3\",\n      isButtonDisabled: false,\n      isSuccess: \"unsuccess\",\n      isTrue: true,\n      isNew: true,\n      highlightColor: \"orange\",\n      fontSizehighlight: \"20px\",\n      succcessStyled: {\n        color: \"green\",\n        border: \"1px solid green\",\n        padding: \"10px\",\n      },\n      number: -2,\n      vShowDir: true,\n      arrNumdata: [\"batman\", \"superman\", \"flash\"],\n      superheroDataArr: [\n        { name: \"batman\", alias: \"bruce\" },\n        { name: \"superman\", alias: \"clark\" },\n        { name: \"flash\", alias: \"barry\" },\n      ],\n    };\n  },\n\n  methods: {\n    multiplier(number) {\n      return number * this.basemultiplier;\n    },\n    increment() {\n      return (this.countvalue += 1);\n    },\n    decrement() {\n      return (this.countvalue -= 1);\n    },\n\n    handleForm(e) {\n      e.preventDefault();\n      console.log(\"the form values are\", this.formValues);\n    },\n  },\n\n  // the computed property can be used to write the piece of logic in one place and then we use the property\n  // when needed in the template\n  computed: {\n    // fullnamefun() {},\n    fullnamecomputed() {\n      return `${this.firstname}, ${this.lastname}`;\n    },\n  },\n\n  // watchers , the watchers are used to watch the data of the value of the var closely to execute the funciton for\n  // the certain condition\n  watch: {\n    volume(vol, inpval) {\n      if (vol > inpval && vol === 16) {\n        alert(\"volume is loud, please decrease!\");\n      }\n    },\n  },\n\n  // ! if there is any data to be formatted then we use the computed property or any generic fun to modify the data\n  //! and we use the watch to watch closely the value which we want to and trigger the function or method wehen needed\n};\n</script>\n\n<style>\n.underlined {\n  text-decoration: underline;\n}\n\n.success {\n  color: green;\n}\n.unsuccess {\n  color: red;\n}\n\n.new {\n  font-style: italic;\n  font-weight: 800;\n}\n\n.greaterThanZero {\n  color: green;\n}\n\n.notGreaterThanZero {\n  color: red;\n}\n</style>\n"],"mappings":";gCACEA,mBAAA,CAAa,YAAT,MAAI;;;6DAARC,UAAa,EACbC,mBAAA,sEAAyE,EACzEA,mBAAA,8FACyD,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}