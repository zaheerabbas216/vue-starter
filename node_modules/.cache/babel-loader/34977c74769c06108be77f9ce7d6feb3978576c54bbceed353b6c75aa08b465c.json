{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"textContent\"];\nconst _hoisted_2 = [\"innerHTML\"];\nconst _hoisted_3 = [\"id\"];\nconst _hoisted_4 = [\"disabled\"];\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"underlined\"\n}, \"underlined text\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: /*#__PURE__*/_normalizeClass(['new', 'success'])\n}, \" New Data with the multiple array of styles (classes in the array) \", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"h5\", null, \"Hello \" + _toDisplayString($data.name), 1 /* TEXT */), _createCommentVNode(\" v-text directive \"), _createElementVNode(\"p\", {\n    textContent: _toDisplayString($data.village)\n  }, null, 8 /* PROPS */, _hoisted_1), _createCommentVNode(\" v-html directive \"), _createElementVNode(\"p\", {\n    innerHTML: $data.mentor\n  }, null, 8 /* PROPS */, _hoisted_2), _createCommentVNode(\" using the atrributes like id,class etc.. \"), _createElementVNode(\"p\", {\n    id: $data.height\n  }, _toDisplayString($data.height), 9 /* TEXT, PROPS */, _hoisted_3), _createCommentVNode(\" other binding example using the boolean  \"), _createElementVNode(\"button\", {\n    disabled: $data.isButtonDisabled\n  }, \"Click Me!\", 8 /* PROPS */, _hoisted_4), _createCommentVNode(\" using the class (static)\"), _hoisted_5, _createCommentVNode(\" we can also add the dynamic styles by using the  \"), _createElementVNode(\"p\", {\n    class: _normalizeClass($data.isSuccess)\n  }, _toDisplayString($data.isSuccess), 3 /* TEXT, CLASS */), _createCommentVNode(\" to dynamically bind the data using the ternary operator in the v-bind directive \"), _createElementVNode(\"p\", {\n    class: _normalizeClass($data.isTrue ? 'success' : 'unsuccess')\n  }, \"is its \" + _toDisplayString($data.isTrue), 3 /* TEXT, CLASS */), _createCommentVNode(\" we can also use the array and the object approach to bind the multiple classes to the tag  \"), _hoisted_6, _createCommentVNode(\" we can also conditional render the aray of the classes  \"), _createElementVNode(\"p\", {\n    class: _normalizeClass([$data.isTrue && $data.isSuccess ? 'success' : 'unsuccess'])\n  }, \" Conditional rendering of the v bind classes within the array \", 2 /* CLASS */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","_normalizeClass","_toDisplayString","$data","name","_createCommentVNode","village","innerHTML","mentor","_hoisted_2","id","height","_hoisted_3","disabled","isButtonDisabled","_hoisted_4","_hoisted_5","isSuccess","isTrue","_hoisted_6"],"sources":["/home/zaheerabbas/Desktop/Projects/VueJs/hello-world/src/App.vue"],"sourcesContent":["<template>\n  <h5>Hello {{ name }}</h5>\n\n  <!-- v-text directive -->\n  <p v-text=\"village\"></p>\n\n  <!-- v-html directive -->\n  <p v-html=\"mentor\"></p>\n\n  <!-- using the atrributes like id,class etc.. -->\n  <p v-bind:id=\"height\">{{ height }}</p>\n  <!-- other binding example using the boolean  -->\n\n  <button v-bind:disabled=\"isButtonDisabled\">Click Me!</button>\n\n  <!-- using the class (static)-->\n  <p class=\"underlined\">underlined text</p>\n\n  <!-- we can also add the dynamic styles by using the  -->\n  <p v-bind:class=\"isSuccess\">{{ isSuccess }}</p>\n  <!-- to dynamically bind the data using the ternary operator in the v-bind directive -->\n  <p v-bind:class=\"isTrue ? 'success' : 'unsuccess'\">is its {{ isTrue }}</p>\n\n  <!-- we can also use the array and the object approach to bind the multiple classes to the tag  -->\n  <p v-bind:class=\"['new', 'success']\">\n    New Data with the multiple array of styles (classes in the array)\n  </p>\n\n  <!-- we can also conditional render the aray of the classes  -->\n\n  <p v-bind:class=\"[isTrue && isSuccess ? 'success' : 'unsuccess']\">\n    Conditional rendering of the v bind classes within the array\n  </p>\n</template>\n\n<script>\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      name: \"Naruto\",\n      village: \"Leaf\",\n      mentor: \"<b>Jiraya</b>\",\n      height: \"5.3\",\n      isButtonDisabled: false,\n      isSuccess: \"unsuccess\",\n      isTrue: true,\n    };\n  },\n};\n</script>\n\n<style>\n.underlined {\n  text-decoration: underline;\n}\n\n.success {\n  color: green;\n}\n.unsuccess {\n  color: red;\n}\n\n.new {\n  font-style: italic;\n  font-weight: 800;\n}\n</style>\n"],"mappings":";;;;;gCAgBEA,mBAAA,CAAyC;EAAtCC,KAAK,EAAC;AAAY,GAAC,iBAAe;gCAQrCD,mBAAA,CAEI;EAFMC,KAAK,eAAAC,eAAA,CAAE,kBAAkB;GAAE,qEAErC;;;6DAzBAF,mBAAA,CAAyB,YAArB,QAAM,GAAAG,gBAAA,CAAGC,KAAA,CAAAC,IAAI,kBAEjBC,mBAAA,sBAAyB,EACzBN,mBAAA,CAAwB;iBAArBG,gBAAA,CAAQC,KAAQ,CAAAG,OAAD;uCAElBD,mBAAA,sBAAyB,EACzBN,mBAAA,CAAuB;IAApBQ,SAAe,EAAPJ,KAAA,CAAAK;EAAM,wBAAAC,UAAA,GAEjBJ,mBAAA,8CAAiD,EACjDN,mBAAA,CAAsC;IAA5BW,EAAE,EAAEP,KAAA,CAAAQ;EAAM,GAAAT,gBAAA,CAAKC,KAAA,CAAAQ,MAAM,wBAAAC,UAAA,GAC/BP,mBAAA,8CAAiD,EAEjDN,mBAAA,CAA6D;IAA9Cc,QAAQ,EAAEV,KAAA,CAAAW;EAAgB,GAAE,WAAS,iBAAAC,UAAA,GAEpDV,mBAAA,6BAAgC,EAChCW,UAAyC,EAEzCX,mBAAA,sDAAyD,EACzDN,mBAAA,CAA+C;IAArCC,KAAK,EAAAC,eAAA,CAAEE,KAAA,CAAAc,SAAS;sBAAKd,KAAA,CAAAc,SAAS,yBACxCZ,mBAAA,qFAAwF,EACxFN,mBAAA,CAA0E;IAAhEC,KAAK,EAAAC,eAAA,CAAEE,KAAA,CAAAe,MAAM;KAA4B,SAAO,GAAAhB,gBAAA,CAAGC,KAAA,CAAAe,MAAM,yBAEnEb,mBAAA,gGAAmG,EACnGc,UAEI,EAEJd,mBAAA,6DAAgE,EAEhEN,mBAAA,CAEI;IAFMC,KAAK,EAAAC,eAAA,EAAGE,KAAA,CAAAe,MAAM,IAAIf,KAAA,CAAAc,SAAS;KAA6B,gEAElE,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}