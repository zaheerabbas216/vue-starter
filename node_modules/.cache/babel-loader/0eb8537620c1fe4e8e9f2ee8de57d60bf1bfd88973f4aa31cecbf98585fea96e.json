{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"the greet component\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", null, \"the data from the state is --\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", null, \"the data from the getter is -\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", null, \"count value from the store\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", null, \"showing the list of the cities from the store array -\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"\"\n}, \"username\", -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"\"\n}, \"email\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"h1\", null, \"Welcome \" + _toDisplayString($props.name), 1 /* TEXT */), _createCommentVNode(\" from the store \"), _hoisted_2, _createElementVNode(\"p\", null, \" Firstname - \" + _toDisplayString(_ctx.$store.state.firstname) + \", Lastname - \" + _toDisplayString(_ctx.$store.state.lastname), 1 /* TEXT */), _createCommentVNode(\" full name using the getter can be shown below \"), _hoisted_3, _createElementVNode(\"p\", null, \"fullname - \" + _toDisplayString(_ctx.$store.getters.fullname), 1 /* TEXT */), _createCommentVNode(\" add to favs button  \"), _createCommentVNode(\" <p>add to favs button</p> \"), _createCommentVNode(\" <button @click=\\\"$store.dispatch('addtofav', 'test')\\\">Add to favs</button> \"), _createCommentVNode(\" to get the count value from the store \"), _hoisted_4, _createElementVNode(\"p\", null, _toDisplayString(_ctx.$store.state.counts), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$store.dispatch('change_counts'))\n  }, \"increase count\"), _hoisted_5, _createTextVNode(\" \" + _toDisplayString(_ctx.$store.state.cities) + \" \", 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.$store.state.cities, city => {\n    return _openBlock(), _createElementBlock(\"p\", {\n      key: city\n    }, _toDisplayString(city), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"add new city\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.city = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.city]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.addnewcity && $options.addnewcity(...args))\n  }, \"Add New City\"), _createCommentVNode(\" the user data from the form  \"), _createElementVNode(\"form\", null, [_hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    id: \"username\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.formValue.username = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.formValue.username]]), _hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.formValue.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.formValue.email]])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","for","_hoisted_1","_toDisplayString","$props","name","_createCommentVNode","_hoisted_2","_ctx","$store","state","firstname","lastname","_hoisted_3","getters","fullname","_hoisted_4","counts","onClick","_cache","$event","dispatch","_hoisted_5","cities","_createElementBlock","_Fragment","_renderList","city","key","type","placeholder","args","$options","addnewcity","_hoisted_6","id","formValue","username","_hoisted_7","email"],"sources":["/home/zaheerabbas/Desktop/Projects/VueJs/hello-world/vuejs-starter/src/components/Greet.vue"],"sourcesContent":["<template>\n  <h2>the greet component</h2>\n  <h1>Welcome {{ name }}</h1>\n\n  <!-- from the store -->\n  <p>the data from the state is --</p>\n  <p>\n    Firstname - {{ $store.state.firstname }}, Lastname -\n    {{ $store.state.lastname }}\n  </p>\n  <!-- full name using the getter can be shown below -->\n  <p>the data from the getter is -</p>\n  <p>fullname - {{ $store.getters.fullname }}</p>\n\n  <!-- add to favs button  -->\n  <!-- <p>add to favs button</p> -->\n  <!-- <button @click=\"$store.dispatch('addtofav', 'test')\">Add to favs</button> -->\n\n  <!-- to get the count value from the store -->\n  <p>count value from the store</p>\n  <p>{{ $store.state.counts }}</p>\n  <button @click=\"$store.dispatch('change_counts')\">increase count</button>\n\n  <p>showing the list of the cities from the store array -</p>\n  {{ $store.state.cities }}\n  <p v-for=\"city in $store.state.cities\" :key=\"city\">{{ city }}</p>\n  <input type=\"text\" placeholder=\"add new city\" v-model=\"city\" />\n  <button @click=\"addnewcity\">Add New City</button>\n\n  <!-- the user data from the form  -->\n  <form>\n    <label for=\"\">username</label>\n    <input\n      type=\"text\"\n      name=\"username\"\n      id=\"username\"\n      v-model=\"formValue.username\"\n    />\n\n    <label for=\"\">email</label>\n    <input type=\"text\" name=\"email\" id=\"email\" v-model=\"formValue.email\" />\n  </form>\n</template>\n\n\n<script>\n// here we need to specify what all the props we will get from the parent component and we will mention\n//as shown in the props obj arr\nexport default {\n  name: \"GreetVue\",\n  props: [\"name\"],\n  city: \"\",\n  formValues: {\n    username: \"\",\n    email: \"\",\n  },\n\n  methods: {\n    addnewcity() {\n      this.$store.dispatch(\"add_cities\", this.city);\n    },\n  },\n};\n</script>"],"mappings":";gCACEA,mBAAA,CAA4B,YAAxB,qBAAmB;gCAIvBA,mBAAA,CAAoC,WAAjC,+BAA6B;gCAMhCA,mBAAA,CAAoC,WAAjC,+BAA6B;gCAQhCA,mBAAA,CAAiC,WAA9B,4BAA0B;gCAI7BA,mBAAA,CAA4D,WAAzD,uDAAqD;gCAQtDA,mBAAA,CAA8B;EAAvBC,GAAG,EAAC;AAAE,GAAC,UAAQ;gCAQtBD,mBAAA,CAA2B;EAApBC,GAAG,EAAC;AAAE,GAAC,OAAK;;;6DAtCrBC,UAA4B,EAC5BF,mBAAA,CAA2B,YAAvB,UAAQ,GAAAG,gBAAA,CAAGC,MAAA,CAAAC,IAAI,kBAEnBC,mBAAA,oBAAuB,EACvBC,UAAoC,EACpCP,mBAAA,CAGI,WAHD,eACW,GAAAG,gBAAA,CAAGK,IAAA,CAAAC,MAAM,CAACC,KAAK,CAACC,SAAS,IAAG,eACxC,GAAAR,gBAAA,CAAGK,IAAA,CAAAC,MAAM,CAACC,KAAK,CAACE,QAAQ,kBAE1BN,mBAAA,mDAAsD,EACtDO,UAAoC,EACpCb,mBAAA,CAA+C,WAA5C,aAAW,GAAAG,gBAAA,CAAGK,IAAA,CAAAC,MAAM,CAACK,OAAO,CAACC,QAAQ,kBAExCT,mBAAA,yBAA4B,EAC5BA,mBAAA,+BAAkC,EAClCA,mBAAA,iFAAkF,EAElFA,mBAAA,2CAA8C,EAC9CU,UAAiC,EACjChB,mBAAA,CAAgC,WAAAG,gBAAA,CAA1BK,IAAA,CAAAC,MAAM,CAACC,KAAK,CAACO,MAAM,kBACzBjB,mBAAA,CAAyE;IAAhEkB,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEZ,IAAA,CAAAC,MAAM,CAACY,QAAQ;KAAmB,gBAAc,GAEhEC,UAA4D,E,iBAAA,GAC5D,GAAAnB,gBAAA,CAAGK,IAAA,CAAAC,MAAM,CAACC,KAAK,CAACa,MAAM,IAAG,GACzB,kB,kBAAAC,mBAAA,CAAiEC,SAAA,QAAAC,WAAA,CAA/ClB,IAAA,CAAAC,MAAM,CAACC,KAAK,CAACa,MAAM,EAA3BI,IAAI;yBAAdH,mBAAA,CAAiE;MAAzBI,GAAG,EAAED;IAAI,GAAAxB,gBAAA,CAAKwB,IAAI;kDAC1D3B,mBAAA,CAA+D;IAAxD6B,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC,cAAc;+DAAUtB,IAAA,CAAAmB,IAAI,GAAAP,MAAA;iDAAJZ,IAAA,CAAAmB,IAAI,E,GAC3D3B,mBAAA,CAAiD;IAAxCkB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAY,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;KAAE,cAAY,GAExCzB,mBAAA,kCAAqC,EACrCN,mBAAA,CAWO,eAVLkC,UAA8B,E,gBAC9BlC,mBAAA,CAKE;IAJA6B,IAAI,EAAC,MAAM;IACXxB,IAAI,EAAC,UAAU;IACf8B,EAAE,EAAC,UAAU;+DACJ3B,IAAA,CAAA4B,SAAS,CAACC,QAAQ,GAAAjB,MAAA;iDAAlBZ,IAAA,CAAA4B,SAAS,CAACC,QAAQ,E,GAG7BC,UAA2B,E,gBAC3BtC,mBAAA,CAAuE;IAAhE6B,IAAI,EAAC,MAAM;IAACxB,IAAI,EAAC,OAAO;IAAC8B,EAAE,EAAC,OAAO;+DAAU3B,IAAA,CAAA4B,SAAS,CAACG,KAAK,GAAAnB,MAAA;iDAAfZ,IAAA,CAAA4B,SAAS,CAACG,KAAK,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}